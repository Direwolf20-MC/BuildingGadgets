buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'

    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.


group = "com.direwolf20.buildinggadgets" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "BuildingGadgets"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = minecraft_version + "-" + forge_version
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20171003"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    replaceIn "BuildingGadgets.java"
    replace "@VERSION@", project.version
    replace "@UPDATE@", update_json
}

repositories {
    maven {
        name "tterrag's Maven" // CTM
        url "https://maven.tterrag.com/"
    }
    maven {
        name "Raoulvdberge Repo" // RS
        url "https://repo.raoulvdberge.com/"
    }
    maven {
        name = "DVS1 Maven" // AE2
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        name = "CurseForge" // SSN, Mekanism, Cyclic
        url = "https://minecraft.curseforge.com/api/maven/"
    }
    maven {
        name = "Covers" // CoFH
        url = "https://maven.covers1624.net/"
    }
    maven {
        name = "Mod Maven" // AA
        url = "https://modmaven.k-4u.nl/"
    }
    maven {
        name "Jared's Repo" // EI
        url "https://maven.blamejared.com/"
    }
    maven {
        name "IC2" // IC2, Forestry
        url "http://maven.ic2.player.to/"
    }
}

dependencies {
    runtime "team.chisel.ctm:CTM:MC${minecraft_version}-${ctm_version}"
    deobfCompile "team.chisel.ctm:CTM:MC${minecraft_version}-${ctm_version}:api"
    deobfCompile "refinedstorage:refinedstorage:${rs_version}:api"
    deobfCompile "appeng:appliedenergistics2:${ae2_version}:api"
    deobfCompile "simple-storage-network:SimpleStorageNetwork:${ssn_version}"
    deobfCompile "cofh:CoFHCore:${cofh_core_version}:universal"
    deobfCompile "de.ellpeck.actuallyadditions:ActuallyAdditions:${aa_version}:api"
    deobfCompile "blusunrize:ImmersiveEngineering:${ei_version}"
    deobfCompile "net.industrial-craft:industrialcraft-2:${ic2_version}:api"
    deobfCompile "net.sengir.forestry:forestry_${forestry_version}:api"
    deobfCompile "mekanism:Mekanism:${mekanism_version}"
    deobfCompile "cyclic:Cyclic:${cyclic_version}"

    testCompile "org.junit.jupiter:junit-jupiter-api:5.4.0"

    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    inputs.property "updatejson", update_json

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version, 'updatejson': update_json
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
